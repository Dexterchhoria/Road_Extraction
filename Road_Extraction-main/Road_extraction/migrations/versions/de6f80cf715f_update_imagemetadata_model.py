"""Update ImageMetadata model

Revision ID: de6f80cf715f
Revises: 
Create Date: 2024-09-29 17:32:25.930985

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'de6f80cf715f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('spatial_ref_sys')
    with op.batch_alter_table('road_data', schema=None) as batch_op:
        batch_op.drop_index('ix_road_data_id')

    op.drop_table('road_data')
    op.drop_table('alert')
    op.drop_table('road_change')
    op.drop_table('image_metadata')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('image_metadata',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('ots_product_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('sat_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('sensor', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('sub_scene', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('gen_agency', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('path', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('row_number', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('segment_number', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('session_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('strip_number', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('scene_number', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('date_of_pass', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('no_of_bands', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('band_numbers', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('pass_type', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('date_of_dump', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('dumping_orbit_no', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('imaging_orbit_no', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('bytes_per_pixel', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('bits_per_pixel', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('generation_date_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('prod_code', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('prod_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('input_resolution_along', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('input_resolution_across', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('output_resolution_along', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('output_resolution_across', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('season', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('image_format', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('processing_level', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('resamp_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('no_scans', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('no_pixels', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('start_pixel', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('map_projection', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('ellipsoid', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('datum', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('map_origin_lat', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('map_origin_lon', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('prod_ul_lat', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('prod_ul_lon', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('prod_u_lat', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('prod_u_lon', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('prod_lr_lat', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('prod_lr_lon', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('prod_ll_lat', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('prod_ll_lon', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('image_ul_lat', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('image_ul_lon', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('image_u_lat', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('image_u_lon', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('image_lr_lat', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('image_lr_lon', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('image_ll_lat', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('image_ll_lon', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('prod_ul_map_x', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('prod_ul_map_y', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('prod_ur_map_x', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('prod_ur_map_y', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('prod_lr_map_x', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('prod_lr_map_y', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('prod_ll_map_x', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('prod_ll_map_y', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('scene_center_lat', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('scene_center_lon', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('standard_parallel_1', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('standard_parallel_2', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('false_easting', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('false_northing', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('zone_no', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('scene_center_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('scene_center_roll', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('scene_center_pitch', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('scene_center_yaw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('sun_azimuth_at_center', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('sun_elevation_at_center', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('image_heading_angle', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('incidence_angle', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('satellite_altitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('tilt_angle', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dem_correction', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('source_of_orbit', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('source_of_attitude', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('imaging_direction', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('b2_temp', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('b3_temp', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('b4_temp', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('b2_lmin', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('b3_lmin', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('b4_lmin', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('b2_lmax', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('b3_lmax', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('b4_lmax', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('quality', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('cloud_percent', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('across_track_accuracy', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('along_track_accuracy', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('shift_percent', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('satellite_heading_angle', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('scene_start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('scene_end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('sen_azimuth_at_center', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('sen_elevation_at_center', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('incidence_angle_along_track', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('incidence_angle_across_track', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('view_angle', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('view_angle_along_track', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('view_angle_across_track', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('product_scene_start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('product_scene_end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('jpeg_no_columns', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('jpeg_no_rows', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='image_metadata_pkey')
    )
    op.create_table('road_change',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('region', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('change_image_path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('detected_on', sa.DATE(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='road_change_pkey')
    )
    op.create_table('alert',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('area_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('change_detected', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='alert_pkey')
    )
    op.create_table('road_data',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('image_path', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('region', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('sensor', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='road_data_pkey')
    )
    with op.batch_alter_table('road_data', schema=None) as batch_op:
        batch_op.create_index('ix_road_data_id', ['id'], unique=False)

    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    # ### end Alembic commands ###
