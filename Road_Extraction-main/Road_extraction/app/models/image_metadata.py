from app.utils.database_utils import db  # Ensure you're importing from the correct location
from sqlalchemy import Numeric

class ImageMetadata(db.Model):
    __tablename__ = 'image_metadata'

    id = db.Column(db.Integer, primary_key=True)
    product_id = db.Column(db.String(50), nullable=False)
    ots_product_id = db.Column(db.String(100), nullable=False)
    sat_id = db.Column(db.String(50), nullable=False)
    sensor = db.Column(db.String(50), nullable=False)
    sub_scene = db.Column(db.String(10), nullable=True)
    gen_agency = db.Column(db.String(50), nullable=True)
    path = db.Column(db.String(10), nullable=True)
    row_number = db.Column(db.String(10), nullable=True)
    segment_number = db.Column(db.String(10), nullable=True)
    session_number = db.Column(db.Integer, nullable=True)
    strip_number = db.Column(db.String(10), nullable=True)
    scene_number = db.Column(db.String(10), nullable=True)
    date_of_pass = db.Column(db.Date, nullable=True)
    no_of_bands = db.Column(db.Integer, nullable=True)
    band_numbers = db.Column(db.String(10), nullable=True)
    pass_type = db.Column(db.String(10), nullable=True)
    date_of_dump = db.Column(db.Date, nullable=True)
    dumping_orbit_no = db.Column(db.Integer, nullable=True)
    imaging_orbit_no = db.Column(db.Integer, nullable=True)
    bytes_per_pixel = db.Column(Numeric, nullable=True)  # Use Numeric for decimal values
    bits_per_pixel = db.Column(db.Integer, nullable=True)
    generation_date_time = db.Column(db.DateTime, nullable=True)
    prod_code = db.Column(db.String(50), nullable=True)
    prod_type = db.Column(db.String(50), nullable=True)
    input_resolution_along = db.Column(Numeric, nullable=True)
    input_resolution_across = db.Column(Numeric, nullable=True)
    output_resolution_along = db.Column(Numeric, nullable=True)
    output_resolution_across = db.Column(Numeric, nullable=True)
    season = db.Column(db.String(10), nullable=True)
    image_format = db.Column(db.String(10), nullable=True)
    processing_level = db.Column(db.String(10), nullable=True)
    resamp_code = db.Column(db.String(10), nullable=True)
    no_scans = db.Column(db.Integer, nullable=True)
    no_pixels = db.Column(db.Integer, nullable=True)
    start_pixel = db.Column(db.Integer, nullable=True)
    map_projection = db.Column(db.String(50), nullable=True)
    ellipsoid = db.Column(db.String(50), nullable=True)
    datum = db.Column(db.String(50), nullable=True)
    map_origin_lat = db.Column(Numeric, nullable=True)
    map_origin_lon = db.Column(Numeric, nullable=True)
    prod_ul_lat = db.Column(Numeric, nullable=True)
    prod_ul_lon = db.Column(Numeric, nullable=True)
    prod_u_lat = db.Column(Numeric, nullable=True)
    prod_u_lon = db.Column(Numeric, nullable=True)
    prod_lr_lat = db.Column(Numeric, nullable=True)
    prod_lr_lon = db.Column(Numeric, nullable=True)
    prod_ll_lat = db.Column(Numeric, nullable=True)
    prod_ll_lon = db.Column(Numeric, nullable=True)
    image_ul_lat = db.Column(Numeric, nullable=True)
    image_ul_lon = db.Column(Numeric, nullable=True)
    image_u_lat = db.Column(Numeric, nullable=True)
    image_u_lon = db.Column(Numeric, nullable=True)
    image_lr_lat = db.Column(Numeric, nullable=True)
    image_lr_lon = db.Column(Numeric, nullable=True)
    image_ll_lat = db.Column(Numeric, nullable=True)
    image_ll_lon = db.Column(Numeric, nullable=True)
    prod_ul_map_x = db.Column(Numeric, nullable=True)
    prod_ul_map_y = db.Column(Numeric, nullable=True)
    prod_ur_map_x = db.Column(Numeric, nullable=True)
    prod_ur_map_y = db.Column(Numeric, nullable=True)
    prod_lr_map_x = db.Column(Numeric, nullable=True)
    prod_lr_map_y = db.Column(Numeric, nullable=True)
    prod_ll_map_x = db.Column(Numeric, nullable=True)
    prod_ll_map_y = db.Column(Numeric, nullable=True)
    scene_center_lat = db.Column(Numeric, nullable=True)
    scene_center_lon = db.Column(Numeric, nullable=True)
    standard_parallel_1 = db.Column(Numeric, nullable=True)
    standard_parallel_2 = db.Column(Numeric, nullable=True)
    false_easting = db.Column(Numeric, nullable=True)
    false_northing = db.Column(Numeric, nullable=True)
    zone_no = db.Column(db.Integer, nullable=True)
    scene_center_time = db.Column(db.DateTime, nullable=True)
    scene_center_roll = db.Column(Numeric, nullable=True)
    scene_center_pitch = db.Column(Numeric, nullable=True)
    scene_center_yaw = db.Column(Numeric, nullable=True)
    sun_azimuth_at_center = db.Column(Numeric, nullable=True)
    sun_elevation_at_center = db.Column(Numeric, nullable=True)
    image_heading_angle = db.Column(Numeric, nullable=True)
    incidence_angle = db.Column(Numeric, nullable=True)
    satellite_altitude = db.Column(Numeric, nullable=True)
    tilt_angle = db.Column(Numeric, nullable=True)
    dem_correction = db.Column(db.String(10), nullable=True)
    source_of_orbit = db.Column(db.Integer, nullable=True)
    source_of_attitude = db.Column(db.Integer, nullable=True)
    imaging_direction = db.Column(db.String(10), nullable=True)
    b2_temp = db.Column(Numeric, nullable=True)
    b3_temp = db.Column(Numeric, nullable=True)
    b4_temp = db.Column(Numeric, nullable=True)
    b2_lmin = db.Column(Numeric, nullable=True)
    b3_lmin = db.Column(Numeric, nullable=True)
    b4_lmin = db.Column(Numeric, nullable=True)
    b2_lmax = db.Column(Numeric, nullable=True)
    b3_lmax = db.Column(Numeric, nullable=True)
    b4_lmax = db.Column(Numeric, nullable=True)
    quality = db.Column(db.String(10), nullable=True)
    cloud_percent = db.Column(Numeric, nullable=True)
    across_track_accuracy = db.Column(Numeric, nullable=True)
    along_track_accuracy = db.Column(Numeric, nullable=True)
    shift_percent = db.Column(Numeric, nullable=True)
    satellite_heading_angle = db.Column(Numeric, nullable=True)
    scene_start_time = db.Column(db.DateTime, nullable=True)
    scene_end_time = db.Column(db.DateTime, nullable=True)
    sen_azimuth_at_center = db.Column(Numeric, nullable=True)
    sen_elevation_at_center = db.Column(Numeric, nullable=True)
    incidence_angle_along_track = db.Column(Numeric, nullable=True)
    incidence_angle_across_track = db.Column(Numeric, nullable=True)
    view_angle = db.Column(Numeric, nullable=True)
    view_angle_along_track = db.Column(Numeric, nullable=True)
    view_angle_across_track = db.Column(Numeric, nullable=True)
    product_scene_start_time = db.Column(db.DateTime, nullable=True)
    product_scene_end_time = db.Column(db.DateTime, nullable=True)
    jpeg_no_columns = db.Column(db.Integer, nullable=True)
    jpeg_no_rows = db.Column(db.Integer, nullable=True)

    def to_dict(self):
        return {column.name: getattr(self, column.name) for column in self.__table__.columns}
